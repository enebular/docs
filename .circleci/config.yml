version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  linkcheck: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8.9.4 # ...with this image as the primary container; this is where all `steps` will run
      - image: mongo:3.4.4 # and this image as the secondary service container
    steps: # a collection of executable commands 
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm 
          command: 'sudo npm install -g npm@5.6.0'
      - restore_cache: # special step to restore the dependency cache 
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install markdown link checker
          command: 'sudo npm install -g markdown-link-check@3.7.2'
      - run:
          name: find
          command: 'sudo find . -name \*.md -exec markdown-link-check {} -q -c link-checker-config.json \; 2>error_log'
      - run:
          name: log check
          command: 'if [ -s ./error_log ]; then echo "Broken links have been found in the documents."; exit 1; fi'
  build:
    working_directory: ~/docs
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      - run:
          name: update npm
          command: |
            npm install -g npm@latest
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm modules install
          command: |
            npm install
      - run:
          name: gitbook install
          command: |
            npm run postinstall
      - run:
          name: gitbook build
          command: |
            npm run build
      - deploy:
          name: deployment task
          command: |
            node_modules/.bin/netlify deploy --draft -t "$NETLIFY_ACCESS_TOKEN"

  test:
    working_directory: ~/docs
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      - run:
          name: Testing Application
          command: |
            npm run test

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: 
                - circle-ci2.0-test
  enebular-editor-testing-circleci:
    jobs:
      - linkcheck:
          filters:
            branches:
              only:
                - desktop-editor
                - develop